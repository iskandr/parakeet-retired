printf "\n"; 
printf "===================================================\n";
printf "|                Medium Sized Whale               |\n"; 
printf "===================================================\n";

# Build parameters

 
OBJS="CQInterface/QType.o CQInterface/Debug.o Init.o Callbacks.o"
LINKER_FLAGS="-lflags -ccopt,$PQ_PATH/libpq_stubs.o,\
-ccopt,$PQ_PATH/cuda_stubs.o,\
-ccopt,-L/usr/local/cuda/lib/,\
-ccopt,-L/usr/lib/nvidia-current,\
-ccopt,-lcuda,\
-ccopt,-lcudart,\
-ccopt,$PQ_PATH/../OCAMLInterface/ocaml_interface.a"

SUFFIX=
TARGET="preprocess.native"
PPFLAGS=
MAKEFLAGS=
FINALTARGET=

if [ "prof" == "$1" ]; then
  SUFFIX=".p"
  MAKEFLAGS="PROF=1"
  FINALTARGET="Time.p.native"
fi
if [ "debug" == "$1" ]; then
  PPFLAGS="-ppflag -DDEBUG"
  MAKEFLAGS="DEBUG=-g"
fi

OCAMLPP="-pp camlp4o -ppflag pa_macro.cmo"
OCAMLBUILD="ocamlbuild $LINKER_FLAGS $OCAMLPP $PPFLAGS -ocamlyacc menhir"
echo $OCAMLBUILD

cd CQInterface
printf "\n\n ******** Building CQInterface *******\n"; 
make clean
cd ..

cd OCAMLInterface
printf "\n\n ******** Building OCAMLInteface *******\n"; 
make clean
cd ..

printf "\n\n ******** Building LibPQ ********* \n";
cd libpq
make clean 
make
cd ..

printf "\n\n ****** Building OCAML Interface ****** \n"
cd OCAMLInterface;
make $MAKEFLAGS
cd ..

if [  "tests!" == "$1" ]; then 
  printf "\n---Building tests---\n";
  $OCAMLBUILD Tests/tests.native -yaccflag infer; 

  printf "\n---Running tests---\n";
 _build/Tests/tests.native;
else
  printf "\n\n******** Building QSyntax.cmxa ********\n";

  echo $OCAMLBUILD;
  $OCAMLBUILD -no-hygiene "Q/QSyntax"${SUFFIX}".cmxa" 

  if [ -n "$TARGET" ]; then

    printf "\n\n******* Building Main Target *******\n"; 
    $OCAMLBUILD $TARGET -no-hygiene;
  fi

 printf "\n\n********* Building Callbacks.cmx ***********\n"; 

 $OCAMLBUILD -no-hygiene "Callbacks"${SUFFIX}".cmx"

 printf "\n\n********* Building CQInterface **********\n"; 
  cd CQInterface;
  make $MAKEFLAGS;
  mv *.o ../_build;
  mv cinterface.so ../_build;
  cd ..

 
  if [ -n "$FINALTARGET" ]; then
    printf "\n\n******** Building FINALTARGET ********\n"; 
    $OCAMLBUILD $FINALTARGET; 
  fi
fi

