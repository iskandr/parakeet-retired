printf "\n"; 
printf "===================================================\n";
printf "|                Medium Sized Whale               |\n"; 
printf "===================================================\n";

# Build parameters

 
OBJS="CQInterface/QType.o CQInterface/Debug.o Init.o" # Callbacks.o
LINKER_FLAGS="-lflags -ccopt,$PQ_PATH/libpq_stubs.o,\
-ccopt,$PQ_PATH/cuda_stubs.o,\
-ccopt,-L/usr/local/cuda/lib/,\
-ccopt,-L/usr/lib/nvidia-current,\
-ccopt,-lcuda,\
-ccopt,-lcudart,\
-ccopt,$PQ_PATH/../OCAMLInterface/ocaml_interface.a"

SUFFIX=
TARGET="preprocess.native Callbacks.cmx"
PPFLAGS=
MAKEFLAGS=
FINALTARGET=

if [ "prof" == "$1" ]; then
  SUFFIX=".p"
  MAKEFLAGS="PROF=1"
  FINALTARGET="Time.p.native"
fi
if [ "debug" == "$1" ]; then
  PPFLAGS="-ppflag -DDEBUG"
  MAKEFLAGS="DEBUG=-g"
fi

OCAMLPP="-pp camlp4o -ppflag pa_macro.cmo"
OCAMLBUILD="ocamlbuild $LINKER_FLAGS $OCAMLPP $PPFLAGS -ocamlyacc menhir"
echo $OCAMLBUILD

cd CQInterface
# printf "\n\n ******** Cleaning CQInterface *******\n"; 
make clean
cd ..

cd OCAMLInterface
# printf "\n\n ******** Cleaning OCAMLInteface *******\n"; 
make clean
cd ..

printf "\n\n ******** Building LibPQ ********* \n";
cd libpq
make clean 
if ! make; then echo "LibPQ build failed"; exit 1; fi 
cd ..

printf "\n\n ****** Building OCaml<->C Interface ****** \n"
cd OCAMLInterface;
if ! make $MAKEFLAGS; then echo "OCamlInterface build failed"; exit 1; fi 
cd ..

if [  "tests!" == "$1" ]; then 
  printf "\n---Building tests---\n";
  $OCAMLBUILD Tests/tests.native -yaccflag infer; 

  printf "\n---Running tests---\n";
 _build/Tests/tests.native;
else
#  printf "\n\n******** Building QSyntax.cmxa ********\n";

#  echo $OCAMLBUILD;
#  if ! $OCAMLBUILD -no-hygiene "Q/QSyntax"${SUFFIX}".cmxa"; then echo "QSyntax build failed"; exit 1; fi 

  if [ -n "$TARGET" ]; then

    # the ocamlbuild plugin only seems to partially enable findlib libraries, they still don't get linked in
    # this is a temporary hack to make all the findlib libraries work
    EXTLIB_DIR=`ocamlfind query -format "%d" extlib`;
    EXTLIB_FLAGS="-lib extLib -cflags -I,$EXTLIB_DIR -lflags -I,$EXTLIB_DIR"
    UINT_DIR=`ocamlfind query -format "%d" uint`;
    UINT_FLAGS="-lib uint32 -lib uint64 -lib uint128 -cflags -I,$UINT_DIR -lflags -I,$UINT_DIR"

    printf "\n\n******* Building Preprocessor and Q Callbacks *******\n"; 
    if ! $OCAMLBUILD $TARGET $EXTLIB_FLAGS $UINT_FLAGS -lib str -no-hygiene; then echo "Preprocessor build failed"; exit 1; fi 
  fi


 printf "\n\n********* Building CQInterface **********\n"; 
  cd CQInterface;
  if ! make $MAKEFLAGS; then echo "CQInterface build failed"; exit 1; fi 
  mv *.o ../_build;
  mv cinterface.so ../_build;
  cd ..
 
  if [ -n "$FINALTARGET" ]; then
    printf "\n\n******** Building FINALTARGET ********\n"; 
    if ! $OCAMLBUILD $FINALTARGET; then echo "Profiling build failed"; exit 1; fi 
  fi
fi

