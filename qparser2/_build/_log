### Starting build.
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: QLexer.mll, tags: { extension:mll, file:QLexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q QLexer.mll # cached
# Target: QLexer.ml.depends, tags: { extension:ml, file:QLexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules QLexer.ml > QLexer.ml.depends # cached
# Target: QParser.mly, tags: { extension:mly, file:QParser.mly, ocaml, ocamlyacc, parser, quiet }
menhir --infer QParser.mly
+ menhir --infer QParser.mly
File "QParser.mly", line 36, characters 16-22:
Warning: the token ADVERB is unused.
File "QParser.mly", line 50, characters 7-18:
Warning: the token BACKSLASH_T is unused.
File "QParser.mly", line 42, characters 16-26:
Warning: the token BAD_ADVERB is unused.
File "QParser.mly", line 43, characters 16-22:
Warning: the token BAD_ID is unused.
File "QParser.mly", line 31, characters 18-25:
Warning: the token BIT_VEC is unused.
File "QParser.mly", line 46, characters 7-12:
Warning: the token COLON is unused.
File "QParser.mly", line 38, characters 16-23:
Warning: the token CONTROL is unused.
File "QParser.mly", line 46, characters 13-25:
Warning: the token DOUBLE_COLON is unused.
File "QParser.mly", line 41, characters 7-18:
Warning: the token LEXER_ERROR is unused.
File "QParser.mly", line 44, characters 7-22:
Warning: the token UNMATCHED_QUOTE is unused.
File "QParser.mly", line 45, characters 14-31:
Warning: the token UNRECOGNIZED_CHAR is unused.
File "QParser.mly", line 35, characters 16-20:
Warning: the token VERB is unused.
File "QParser.mly", line 37, characters 16-26:
Warning: the token VERB_AMEND is unused.
# Target: QParser.mli.depends, tags: { extension:mli, file:QParser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules QParser.mli > QParser.mli.depends
# Target: QSyntax.mli.depends, tags: { extension:mli, file:QSyntax.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules QSyntax.mli > QSyntax.mli.depends # cached
# Target: QSyntax.cmi, tags: { byte, compile, extension:mli, file:QSyntax.mli, interf, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o QSyntax.cmi QSyntax.mli # cached
# Target: QParser.cmi, tags: { byte, compile, extension:mli, file:QParser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o QParser.cmi QParser.mli
# Target: QLexer.cmo, tags: { byte, compile, extension:ml, file:QLexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o QLexer.cmo QLexer.ml # cached
# Target: parser.cmo, tags: { byte, compile, extension:ml, file:parser.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o parser.cmo parser.ml # cached
# Target: QParser.ml.depends, tags: { extension:ml, file:QParser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules QParser.ml > QParser.ml.depends
# Target: QSyntax.ml.depends, tags: { extension:ml, file:QSyntax.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules QSyntax.ml > QSyntax.ml.depends # cached
# Target: QSyntax.cmx, tags: { compile, extension:ml, file:QSyntax.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o QSyntax.cmx QSyntax.ml # cached
# Target: QParser.cmx, tags: { compile, extension:ml, file:QParser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o QParser.cmx QParser.ml
# Target: QLexer.cmx, tags: { compile, extension:ml, file:QLexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o QLexer.cmx QLexer.ml
# Target: parser.cmx, tags: { compile, extension:ml, file:parser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o parser.cmx parser.ml
# Target: parser.native, tags: { dont_link_with, extension:native, file:parser.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt.opt QSyntax.cmx QParser.cmx QLexer.cmx parser.cmx -o parser.native
# Compilation successful.
